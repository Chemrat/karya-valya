Структура сообщения:
[ДЛИНА СООБЩЕНИЯ, НАЧИНАЯ С НОМЕРА][пробел]
[НОМЕР][пробел]
[FROM (число)][пробел]
[TO (число)][пробел]
[ТИП СООБЩЕНИЯ][пробел]
[ТЕКСТ СООБЩЕНИЯ (может содержать бинарную информацию)]

number
from
to
type
text

Пример валидного сообщения:
20 20 -1 -1 ordinary yu

В итоге tcp поток клиента выглядит как текстовый поток вида
(...) inary yu20 20 -1 -1 ordinary yu20 20 -1 -1 ordin (...)

Все общение происходит в виде таких сообщений.

НОМЕР сообщению присваивает сам сервер, нужен он чисто в служебных целях.

ЭТАП НОМЕР 1:
НОВАЯ НАДЕЖДА

1. Если считается, что клиенту можно доверять по его жиду,

Первое сообщение от клиента выглядит как-то так:
(сейчас - если это первый клиент)
(если поля не обозначены, то нам все равно)
-------!!!!!!!!!!--------
from - айди клиента в игре (его игровая ипостась)
to - токен (сорт оф пароль, сейчас не используется)
type -
text - жид клиента
--------------------------
ПОТОМ.

ЗАПИСЫВАЕМ АЙДИ КЛИЕНТА В ИГРЕ И ЖИД (не знаю зачем, но надо)
А ТАК ЖЕ ЗАПИСЫВАЕТ АЙДИ КЛИЕНТА В ИГРЕ! СООТНОСИМ ЕГО С НОМЕРОМ КЛИЕНТА

Потом мы шлем клиенту сообщение
--------!!!!!!!!!!!1-------
from - 
to -        (все, что выше и ниже - как и в присланном сообщении)
type -
text - "nomap"
--------------------------

2. Если считается, что клиенту НЕЛЬЗЯ доверять по его жиду
-------!!!!!!!!!!--------
from - 
to - токен (сорт оф пароль, сейчас не используется)
type -
text - жид клиента
--------------------------

Потом мы шлем ВСЕМ существующим клиентам, что нам НАДО создать новую испостась,
то есть что создан новый клиент.

-------!!!!!!!!!!--------
from - номер клиента (все клиенты нумеруются)
to - 
type - "ordinary" (все ordinary собщения добавляются в очередь досылки)
text - "make_new_mob"
--------------------------

После чего ждем от некоего trusted клиента (то есть первого на данный момент)
ответа на это сообщение:
Вообще, суть trusted клиента что мы считаем, что он не может пиздеть 
вообще никогда.

-------!!!!!!!!!!--------
from - номер клиента, для которого мы запрашивали (from из предыдущего сообщения)
to - номер клиента в игре (клиент его только что создал)
type - "system"
text - "create"
--------------------------

После этого отправляем тому же трастед клиенту запрос на карту
ЗАПРОС НА ЕБАНУЮ КАРТУ

-------!!!!!!!!!!--------
from - 
to - НОМЕР СРАНОГО КЛИЕНТА
type - "system"
text - "need_map"
--------------------------

тудудудудудудуудудуд

После мы посылаем новому, новому клиенту новому клиенту его информацию о 
о номере клиента этого игре, которое мы получили в позапрошлом сообщениее
(номер клиента в игре игре)

НЕ ЗАБЫТЬ 
ЗАПИСЫВАЕМ АЙДИ КЛИЕНТА В ИГРЕ И ЖИД (не знаю зачем, но надо)
А ТАК ЖЕ ЗАПИСЫВАЕТ АЙДИ КЛИЕНТА В ИГРЕ! СООТНОСИМ ЕГО С НОМЕРОМ КЛИЕНТА

И в этот раз мы получили это в позапрошлого сообщения

-------!!!!!!!!!!--------
from - 
to - номер клиента в игре (мы его получили до этого)
type - "system"
text - "map" (надо подождать карту, которую пришлет клиент)
--------------------------

Получаем сообщение от доверенного клиента с картой:

Маленькое сообщение: номер клиента сервера мы используем для того чтоб понять для кого нужны 
сообщения, так как одновременно может получится так, что сразу два новых клиента
будут входить.

------------!!!!!!!!-----------
from - номер последнего обработанного сообщения на карте
to - номер клиента серверный
type - "map"
text - карта (возможно, в бинарном виде)
--------------------------


И пересылаем его целиком новому клиенту, который ждет карту

------------!!!!!!!!-----------
from - номер последнего обработанного сообщения на карте
to - номер клиента серверный
type - "map"
text - карта (возможно, в бинарном виде)
--------------------------

После этого досылаем все сообщения, что были после from клиенту.
(должны хранить их)

И после этого добавляем в список клиентов которые могут получать сообщения.
После этого он же может начать присылать сообщения.

НА ЭТОМ ЗАКАНЧИВАЕТСЯ ОБСЛУЖИВАНИЕ НОВОГО КЛИЕНТА

/////////////////////////////////////////////////////////////////////

Когда от клиента приходит сообщение ordinary то 
------------!!!!!!!!-----------
from - 
to - 
type - "ordinary"
text - какой-то текст
--------------------------

МЫ

нумеруем его 
в to записываем клиентский игровой id 
записываем его в какую-то очередь
посылаем всем (вообще всем, включая отправителя)

------------!!!!!!!!-----------
from - 
to - клиентский игровой айди
type - "ordinary"
text - какой-то текст
--------------------------

////////////////////////////////////////////////
Когда от клиент приходит сообщение "system" то
мы просто пересылаем его всем

------------!!!!!!!!-----------
from - 
to - 
type - "system"
text - какой-то текст
--------------------------

Пересылаем все, ничего не изменяяя всем

/////////////////////////////////////

Дополнительно: каждые N секунд мы отсылаем
всем сообщение 

ему (как и всем ординари сообщениям и только им)
присваивается номер, и он запихвается в стек сообщений,
которые надо будет отпрвлять новым клиентам
после
карты.

------------!!!!!!!!-----------
from - 
to - 
type - "ordinary"
text - "nexttick"
--------------------------


ДЕЙСТВИЯ НА СЛУЧАЙ ОТСОЕДИНЕНИЯ КЛИЕНТОВ:
обычный - отсоединяем, все сообщения, что шли ему выбрасываем, что от него - досылаем

мастер-клиент - отсоединяем, все сообщения, что шли ему выбрасываем, что от него - досылаем
выбираем нового мастер-клиента (самого старого)
пересылаем ему запрос на карту, если был отослан запрос старому.








